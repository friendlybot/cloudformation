{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "S3 static website hosting, CloudFront, and Route 53 Hosted Zone Record Sets for friendlybot.io. (NB: the Acm Certificate ARN must be created and validated in us-east-1).",
  "Mappings": {
    "RegionMap": {
      "us-east-1": {
        "S3WebsiteEndpoint": "s3-website-us-east-1.amazonaws.com"
      },
      "us-east-2": {
        "S3WebsiteEndpoint": "s3-website.us-east-2.amazonaws.com"
      }
    }
  },
  "Parameters": {
    "DomainName": {
      "Type": "String",
      "Default": "friendlybot.io",
      "Description": "Domain name, without www.",
      "AllowedPattern": "^[a-z0-9.]*$"
    },
    "DomainNameWWW": {
      "Type": "String",
      "Default": "www.friendlybot.io",
      "Description": "Domain Name, with www",
      "AllowedPattern": "^www.[a-z0-9.]*$"
    },
    "AcmCertificateArn": {
      "Type": "String",
      "Default": "friendlybot-certificate",
      "Description": "Arn of ACM Certificate"
    }
  },
  "Resources": {
    "S3NonWWW": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": { "Ref": "DomainName" },
        "AccessControl": "Private",
        "WebsiteConfiguration": {
          "RedirectAllRequestsTo": {
            "HostName": { "Ref": "DomainNameWWW" },
            "Protocol": "https"
          }
        }
      }
    },
    "S3WWW": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": { "Ref": "DomainNameWWW" },
        "AccessControl": "Private",
        "WebsiteConfiguration": {
          "IndexDocument": "index.html",
          "ErrorDocument": "error.html"
        }
      }
    },
    "S3WWWBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": { "Ref": "DomainNameWWW" },
        "PolicyDocument": {
          "Statement": [
            {
              "Sid": "PublicReadForGetBucketObjects",
              "Effect": "Allow",
              "Principal": "*",
              "Action": [ "s3:GetObject" ],
              "Resource": { "Fn::Join" : [ "", ["arn:aws:s3:::", { "Ref" : "DomainNameWWW" } , "/*" ] ] }
            }
          ]
        }
      },
      "DependsOn": [ "S3WWW" ]
    },
    "CloudFrontNonWWW": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Aliases": [ { "Ref": "DomainName" } ],
          "DefaultCacheBehavior": {
            "AllowedMethods": [ "HEAD", "GET" ],
            "DefaultTTL": 86400,
            "ForwardedValues": {
              "Cookies": {
                "Forward": "none"
              },
              "QueryString": false
            },
            "MaxTTL": 31536000,
            "MinTTL": 0,
            "TargetOriginId": { "Fn::Join": [ "", [ "S3-", { "Ref": "DomainName" } ] ] },
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "Enabled": true,
          "Origins": [{
            "DomainName": { "Fn::Join": [ ".", [ { "Ref": "DomainName" }, { "Fn::FindInMap" : [ "RegionMap", { "Ref": "AWS::Region" }, "S3WebsiteEndpoint" ] } ] ] },
            "CustomOriginConfig": {
              "HTTPPort": "80",
              "OriginProtocolPolicy": "http-only"
            },
            "Id": { "Fn::Join": [ "", [ "S3-", { "Ref": "DomainName" } ] ] }
          }],
          "ViewerCertificate": {
            "AcmCertificateArn": { "Ref": "AcmCertificateArn" },
            "SslSupportMethod": "sni-only",
            "MinimumProtocolVersion": "TLSv1.2_2018"
          }
        }
      },
      "DependsOn": [ "S3NonWWW" ]
    },
    "CloudFrontWWW": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Aliases": [ { "Ref": "DomainNameWWW" } ],
          "DefaultRootObject": "index.html",
          "DefaultCacheBehavior": {
            "AllowedMethods": [ "HEAD", "GET" ],
            "DefaultTTL": 86400,
            "ForwardedValues": {
              "Cookies": {
                "Forward": "none"
              },
              "QueryString": false
            },
            "MaxTTL": 31536000,
            "MinTTL": 0,
            "TargetOriginId": { "Fn::Join": [ "", [ "S3-", { "Ref": "DomainNameWWW" } ] ] },
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "Enabled": true,
          "Origins": [{
            "DomainName": { "Fn::Join": [ ".", [ { "Ref": "DomainNameWWW" }, { "Fn::FindInMap" : [ "RegionMap", { "Ref": "AWS::Region" }, "S3WebsiteEndpoint" ] } ] ] },
            "CustomOriginConfig": {
              "HTTPPort": "80",
              "OriginProtocolPolicy": "http-only"
            },
            "Id": { "Fn::Join": [ "", [ "S3-", { "Ref": "DomainNameWWW" } ] ] }
          }],
          "ViewerCertificate": {
            "AcmCertificateArn": { "Ref": "AcmCertificateArn" },
            "SslSupportMethod": "sni-only",
            "MinimumProtocolVersion": "TLSv1.2_2018"
          }
        }
      },
      "DependsOn": [ "S3WWW" ]
    },
    "R53NonWWWIPv4": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Type": "A",
        "AliasTarget": {
          "DNSName": { "Fn::GetAtt": ["CloudFrontNonWWW", "DomainName"] },
          "HostedZoneId": "Z2FDTNDATAQYW2"
        },
        "HostedZoneName": { "Fn::Join": [ "", [ { "Ref": "DomainName" }, "." ] ] },
        "Name": { "Ref": "DomainName" }
      },
      "DependsOn": [ "CloudFrontNonWWW" ]
    },
    "R53NonWWWIPv6": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Type": "AAAA",
        "AliasTarget": {
          "DNSName": { "Fn::GetAtt": ["CloudFrontNonWWW", "DomainName"] },
          "HostedZoneId": "Z2FDTNDATAQYW2"
        },
        "HostedZoneName": { "Fn::Join": [ "", [ { "Ref": "DomainName" }, "." ] ] },
        "Name": { "Ref": "DomainName" }
      },
      "DependsOn": [ "CloudFrontNonWWW" ]
    },
    "R53WWWIPv4": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Type": "A",
        "AliasTarget": {
          "DNSName": { "Fn::GetAtt": ["CloudFrontWWW", "DomainName"] },
          "HostedZoneId": "Z2FDTNDATAQYW2"
        },
        "HostedZoneName": { "Fn::Join": [ "", [ { "Ref": "DomainName" }, "." ] ] },
        "Name": { "Ref": "DomainNameWWW" }
      },
      "DependsOn": [ "CloudFrontWWW" ]
    },
    "R53WWWIPv6": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Type": "AAAA",
        "AliasTarget": {
          "DNSName": { "Fn::GetAtt": ["CloudFrontWWW", "DomainName"] },
          "HostedZoneId": "Z2FDTNDATAQYW2"
        },
        "HostedZoneName": { "Fn::Join": [ "", [ { "Ref": "DomainName" }, "." ] ] },
        "Name": { "Ref": "DomainNameWWW" }
      },
      "DependsOn": [ "CloudFrontWWW" ]
    }
  }
}
